// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	"github.com/go-faster/jx"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// DeleteApiKeysId implements DeleteApiKeysId operation.
//
// Delete a api key.
//
// DELETE /admin/api-keys/{id}
func (UnimplementedHandler) DeleteApiKeysId(ctx context.Context, req jx.Raw, params DeleteApiKeysIdParams) (r DeleteApiKeysIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteCampaignsId implements DeleteCampaignsId operation.
//
// Delete a campaign.
//
// DELETE /admin/campaigns/{id}
func (UnimplementedHandler) DeleteCampaignsId(ctx context.Context, req jx.Raw, params DeleteCampaignsIdParams) (r DeleteCampaignsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteCollectionsId implements DeleteCollectionsId operation.
//
// Delete a collection.
//
// DELETE /admin/collections/{id}
func (UnimplementedHandler) DeleteCollectionsId(ctx context.Context, req jx.Raw, params DeleteCollectionsIdParams) (r DeleteCollectionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteCustomerGroupsId implements DeleteCustomerGroupsId operation.
//
// Delete a customer group.
//
// DELETE /admin/customer-groups/{id}
func (UnimplementedHandler) DeleteCustomerGroupsId(ctx context.Context, req jx.Raw, params DeleteCustomerGroupsIdParams) (r DeleteCustomerGroupsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteCustomersId implements DeleteCustomersId operation.
//
// Delete a customer.
//
// DELETE /admin/customers/{id}
func (UnimplementedHandler) DeleteCustomersId(ctx context.Context, req jx.Raw, params DeleteCustomersIdParams) (r DeleteCustomersIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteCustomersIdAddressesAddressID implements DeleteCustomersIdAddressesAddress_id operation.
//
// Remove a list of addresses from a customer. This doesn't delete the Address, only the association
// between the Address and the customer.
//
// DELETE /admin/customers/{id}/addresses/{address_id}
func (UnimplementedHandler) DeleteCustomersIdAddressesAddressID(ctx context.Context, req jx.Raw, params DeleteCustomersIdAddressesAddressIDParams) (r DeleteCustomersIdAddressesAddressIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteInventoryItemsId implements DeleteInventoryItemsId operation.
//
// Delete a inventory item.
//
// DELETE /admin/inventory-items/{id}
func (UnimplementedHandler) DeleteInventoryItemsId(ctx context.Context, req jx.Raw, params DeleteInventoryItemsIdParams) (r DeleteInventoryItemsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteInventoryItemsIdLocationLevelsLocationID implements DeleteInventoryItemsIdLocationLevelsLocation_id operation.
//
// Remove a list of location levels from a inventory item. This doesn't delete the Location Level,
// only the association between the Location Level and the inventory item.
//
// DELETE /admin/inventory-items/{id}/location-levels/{location_id}
func (UnimplementedHandler) DeleteInventoryItemsIdLocationLevelsLocationID(ctx context.Context, req jx.Raw, params DeleteInventoryItemsIdLocationLevelsLocationIDParams) (r DeleteInventoryItemsIdLocationLevelsLocationIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteInvitesId implements DeleteInvitesId operation.
//
// Delete a invite.
//
// DELETE /admin/invites/{id}
func (UnimplementedHandler) DeleteInvitesId(ctx context.Context, req jx.Raw, params DeleteInvitesIdParams) (r DeleteInvitesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePriceListsId implements DeletePriceListsId operation.
//
// Delete a price list.
//
// DELETE /admin/price-lists/{id}
func (UnimplementedHandler) DeletePriceListsId(ctx context.Context, req jx.Raw, params DeletePriceListsIdParams) (r DeletePriceListsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePricingRuleTypesId implements DeletePricingRuleTypesId operation.
//
// Remove a list of rule types from a pricing. This doesn't delete the Rule Type, only the
// association between the Rule Type and the pricing.
//
// DELETE /admin/pricing/rule-types/{id}
func (UnimplementedHandler) DeletePricingRuleTypesId(ctx context.Context, req *AdminDeletePricingRuleTypesRuleTypeReq, params DeletePricingRuleTypesIdParams) (r DeletePricingRuleTypesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteProductsId implements DeleteProductsId operation.
//
// Delete a product.
//
// DELETE /admin/products/{id}
func (UnimplementedHandler) DeleteProductsId(ctx context.Context, req jx.Raw, params DeleteProductsIdParams) (r DeleteProductsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteProductsIdOptionsOptionID implements DeleteProductsIdOptionsOption_id operation.
//
// Remove a list of options from a product. This doesn't delete the Option, only the association
// between the Option and the product.
//
// DELETE /admin/products/{id}/options/{option_id}
func (UnimplementedHandler) DeleteProductsIdOptionsOptionID(ctx context.Context, req jx.Raw, params DeleteProductsIdOptionsOptionIDParams) (r DeleteProductsIdOptionsOptionIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteProductsIdVariantsVariantID implements DeleteProductsIdVariantsVariant_id operation.
//
// Remove a list of variants from a product. This doesn't delete the Variant, only the association
// between the Variant and the product.
//
// DELETE /admin/products/{id}/variants/{variant_id}
func (UnimplementedHandler) DeleteProductsIdVariantsVariantID(ctx context.Context, req jx.Raw, params DeleteProductsIdVariantsVariantIDParams) (r DeleteProductsIdVariantsVariantIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePromotionsId implements DeletePromotionsId operation.
//
// Delete a promotion.
//
// DELETE /admin/promotions/{id}
func (UnimplementedHandler) DeletePromotionsId(ctx context.Context, req jx.Raw, params DeletePromotionsIdParams) (r DeletePromotionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteRegionsId implements DeleteRegionsId operation.
//
// Delete a region.
//
// DELETE /admin/regions/{id}
func (UnimplementedHandler) DeleteRegionsId(ctx context.Context, req jx.Raw, params DeleteRegionsIdParams) (r DeleteRegionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteSalesChannelsId implements DeleteSalesChannelsId operation.
//
// Delete a sales channel.
//
// DELETE /admin/sales-channels/{id}
func (UnimplementedHandler) DeleteSalesChannelsId(ctx context.Context, req jx.Raw, params DeleteSalesChannelsIdParams) (r DeleteSalesChannelsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteStockLocationsId implements DeleteStockLocationsId operation.
//
// Delete a stock location.
//
// DELETE /admin/stock-locations/{id}
func (UnimplementedHandler) DeleteStockLocationsId(ctx context.Context, params DeleteStockLocationsIdParams) (r DeleteStockLocationsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTaxRatesId implements DeleteTaxRatesId operation.
//
// Delete a tax rate.
//
// DELETE /admin/tax-rates/{id}
func (UnimplementedHandler) DeleteTaxRatesId(ctx context.Context, req jx.Raw, params DeleteTaxRatesIdParams) (r DeleteTaxRatesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTaxRatesIdRulesRuleID implements DeleteTaxRatesIdRulesRule_id operation.
//
// Remove a list of rules from a tax rate. This doesn't delete the Rule, only the association between
// the Rule and the tax rate.
//
// DELETE /admin/tax-rates/{id}/rules/{rule_id}
func (UnimplementedHandler) DeleteTaxRatesIdRulesRuleID(ctx context.Context, req jx.Raw, params DeleteTaxRatesIdRulesRuleIDParams) (r DeleteTaxRatesIdRulesRuleIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTaxRegionsId implements DeleteTaxRegionsId operation.
//
// Delete a tax region.
//
// DELETE /admin/tax-regions/{id}
func (UnimplementedHandler) DeleteTaxRegionsId(ctx context.Context, req jx.Raw, params DeleteTaxRegionsIdParams) (r DeleteTaxRegionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUsersId implements DeleteUsersId operation.
//
// Delete a user.
//
// DELETE /admin/users/{id}
func (UnimplementedHandler) DeleteUsersId(ctx context.Context, req jx.Raw, params DeleteUsersIdParams) (r DeleteUsersIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetApiKeys implements GetApiKeys operation.
//
// Retrieve a list of api keys. The api keys can be filtered by fields such as `id`. The api keys can
// also be sorted or paginated.
//
// GET /admin/api-keys
func (UnimplementedHandler) GetApiKeys(ctx context.Context, req jx.Raw) (r GetApiKeysRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetApiKeysId implements GetApiKeysId operation.
//
// Retrieve a api key by its ID. You can expand the api key's relations or select the fields that
// should be returned.
//
// GET /admin/api-keys/{id}
func (UnimplementedHandler) GetApiKeysId(ctx context.Context, req jx.Raw, params GetApiKeysIdParams) (r GetApiKeysIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCampaigns implements GetCampaigns operation.
//
// Retrieve a list of campaigns. The campaigns can be filtered by fields such as `id`. The campaigns
// can also be sorted or paginated.
//
// GET /admin/campaigns
func (UnimplementedHandler) GetCampaigns(ctx context.Context, req jx.Raw) (r GetCampaignsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCampaignsId implements GetCampaignsId operation.
//
// Retrieve a campaign by its ID. You can expand the campaign's relations or select the fields that
// should be returned.
//
// GET /admin/campaigns/{id}
func (UnimplementedHandler) GetCampaignsId(ctx context.Context, req jx.Raw, params GetCampaignsIdParams) (r GetCampaignsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCollections implements GetCollections operation.
//
// Retrieve a list of collections. The collections can be filtered by fields such as `id`. The
// collections can also be sorted or paginated.
//
// GET /admin/collections
func (UnimplementedHandler) GetCollections(ctx context.Context, req jx.Raw) (r GetCollectionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCollectionsId implements GetCollectionsId operation.
//
// Retrieve a collection by its ID. You can expand the collection's relations or select the fields
// that should be returned.
//
// GET /admin/collections/{id}
func (UnimplementedHandler) GetCollectionsId(ctx context.Context, req jx.Raw, params GetCollectionsIdParams) (r GetCollectionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCurrencies implements GetCurrencies operation.
//
// Retrieve a list of currencies. The currencies can be filtered by fields such as `id`. The
// currencies can also be sorted or paginated.
//
// GET /admin/currencies
func (UnimplementedHandler) GetCurrencies(ctx context.Context, req jx.Raw) (r GetCurrenciesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCurrenciesCode implements GetCurrenciesCode operation.
//
// Retrieve a currency by its ID. You can expand the currency's relations or select the fields that
// should be returned.
//
// GET /admin/currencies/{code}
func (UnimplementedHandler) GetCurrenciesCode(ctx context.Context, req jx.Raw, params GetCurrenciesCodeParams) (r GetCurrenciesCodeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCustomerGroups implements GetCustomerGroups operation.
//
// Retrieve a list of customer groups. The customer groups can be filtered by fields such as `id`.
// The customer groups can also be sorted or paginated.
//
// GET /admin/customer-groups
func (UnimplementedHandler) GetCustomerGroups(ctx context.Context, req jx.Raw) (r GetCustomerGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCustomerGroupsId implements GetCustomerGroupsId operation.
//
// Retrieve a customer group by its ID. You can expand the customer group's relations or select the
// fields that should be returned.
//
// GET /admin/customer-groups/{id}
func (UnimplementedHandler) GetCustomerGroupsId(ctx context.Context, req jx.Raw, params GetCustomerGroupsIdParams) (r GetCustomerGroupsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCustomerGroupsIdCustomers implements GetCustomerGroupsIdCustomers operation.
//
// Retrieve a list of customers in a customer group. The customers can be filtered by fields like
// FILTER FIELDS. The customers can also be paginated.
//
// GET /admin/customer-groups/{id}/customers
func (UnimplementedHandler) GetCustomerGroupsIdCustomers(ctx context.Context, req jx.Raw, params GetCustomerGroupsIdCustomersParams) (r GetCustomerGroupsIdCustomersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCustomers implements GetCustomers operation.
//
// Retrieve a list of customers. The customers can be filtered by fields such as `id`. The customers
// can also be sorted or paginated.
//
// GET /admin/customers
func (UnimplementedHandler) GetCustomers(ctx context.Context, req jx.Raw) (r GetCustomersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCustomersId implements GetCustomersId operation.
//
// Retrieve a customer by its ID. You can expand the customer's relations or select the fields that
// should be returned.
//
// GET /admin/customers/{id}
func (UnimplementedHandler) GetCustomersId(ctx context.Context, req jx.Raw, params GetCustomersIdParams) (r GetCustomersIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCustomersIdAddresses implements GetCustomersIdAddresses operation.
//
// Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER
// FIELDS. The addresses can also be paginated.
//
// GET /admin/customers/{id}/addresses
func (UnimplementedHandler) GetCustomersIdAddresses(ctx context.Context, req jx.Raw, params GetCustomersIdAddressesParams) (r GetCustomersIdAddressesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCustomersIdAddressesAddressID implements GetCustomersIdAddressesAddress_id operation.
//
// Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER
// FIELDS. The addresses can also be paginated.
//
// GET /admin/customers/{id}/addresses/{address_id}
func (UnimplementedHandler) GetCustomersIdAddressesAddressID(ctx context.Context, req jx.Raw, params GetCustomersIdAddressesAddressIDParams) (r GetCustomersIdAddressesAddressIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetInventoryItems implements GetInventoryItems operation.
//
// Retrieve a list of inventory items. The inventory items can be filtered by fields such as `id`.
// The inventory items can also be sorted or paginated.
//
// GET /admin/inventory-items
func (UnimplementedHandler) GetInventoryItems(ctx context.Context, req jx.Raw) (r GetInventoryItemsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetInventoryItemsId implements GetInventoryItemsId operation.
//
// Retrieve a inventory item by its ID. You can expand the inventory item's relations or select the
// fields that should be returned.
//
// GET /admin/inventory-items/{id}
func (UnimplementedHandler) GetInventoryItemsId(ctx context.Context, req jx.Raw, params GetInventoryItemsIdParams) (r GetInventoryItemsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetInvites implements GetInvites operation.
//
// Retrieve a list of invites. The invites can be filtered by fields such as `id`. The invites can
// also be sorted or paginated.
//
// GET /admin/invites
func (UnimplementedHandler) GetInvites(ctx context.Context, req jx.Raw) (r GetInvitesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetInvitesId implements GetInvitesId operation.
//
// Retrieve a invite by its ID. You can expand the invite's relations or select the fields that
// should be returned.
//
// GET /admin/invites/{id}
func (UnimplementedHandler) GetInvitesId(ctx context.Context, req jx.Raw, params GetInvitesIdParams) (r GetInvitesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPayments implements GetPayments operation.
//
// Retrieve a list of payments. The payments can be filtered by fields such as `id`. The payments can
// also be sorted or paginated.
//
// GET /admin/payments
func (UnimplementedHandler) GetPayments(ctx context.Context, req jx.Raw) (r GetPaymentsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPaymentsId implements GetPaymentsId operation.
//
// Retrieve a payment by its ID. You can expand the payment's relations or select the fields that
// should be returned.
//
// GET /admin/payments/{id}
func (UnimplementedHandler) GetPaymentsId(ctx context.Context, req jx.Raw, params GetPaymentsIdParams) (r GetPaymentsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPriceLists implements GetPriceLists operation.
//
// Retrieve a list of price lists. The price lists can be filtered by fields such as `id`. The price
// lists can also be sorted or paginated.
//
// GET /admin/price-lists
func (UnimplementedHandler) GetPriceLists(ctx context.Context, req jx.Raw) (r GetPriceListsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPriceListsId implements GetPriceListsId operation.
//
// Retrieve a price list by its ID. You can expand the price list's relations or select the fields
// that should be returned.
//
// GET /admin/price-lists/{id}
func (UnimplementedHandler) GetPriceListsId(ctx context.Context, req jx.Raw, params GetPriceListsIdParams) (r GetPriceListsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPricingRuleTypes implements GetPricingRuleTypes operation.
//
// Retrieve a list of pricing. The pricing can be filtered by fields such as `id`. The pricing can
// also be sorted or paginated.
//
// GET /admin/pricing/rule-types
func (UnimplementedHandler) GetPricingRuleTypes(ctx context.Context, req OptAdminGetPricingRuleTypesParams) (r GetPricingRuleTypesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPricingRuleTypesId implements GetPricingRuleTypesId operation.
//
// Retrieve a list of rule types in a pricing. The rule types can be filtered by fields like FILTER
// FIELDS. The rule types can also be paginated.
//
// GET /admin/pricing/rule-types/{id}
func (UnimplementedHandler) GetPricingRuleTypesId(ctx context.Context, req OptAdminGetPricingRuleTypesRuleTypeParams, params GetPricingRuleTypesIdParams) (r GetPricingRuleTypesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProducts implements GetProducts operation.
//
// Retrieve a list of products. The products can be filtered by fields such as `id`. The products can
// also be sorted or paginated.
//
// GET /admin/products
func (UnimplementedHandler) GetProducts(ctx context.Context, req OptAdminGetProductsParams) (r GetProductsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProductsId implements GetProductsId operation.
//
// Retrieve a product by its ID. You can expand the product's relations or select the fields that
// should be returned.
//
// GET /admin/products/{id}
func (UnimplementedHandler) GetProductsId(ctx context.Context, req jx.Raw, params GetProductsIdParams) (r GetProductsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProductsIdOptions implements GetProductsIdOptions operation.
//
// Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS.
// The options can also be paginated.
//
// GET /admin/products/{id}/options
func (UnimplementedHandler) GetProductsIdOptions(ctx context.Context, req jx.Raw, params GetProductsIdOptionsParams) (r GetProductsIdOptionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProductsIdOptionsOptionID implements GetProductsIdOptionsOption_id operation.
//
// Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS.
// The options can also be paginated.
//
// GET /admin/products/{id}/options/{option_id}
func (UnimplementedHandler) GetProductsIdOptionsOptionID(ctx context.Context, req jx.Raw, params GetProductsIdOptionsOptionIDParams) (r GetProductsIdOptionsOptionIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProductsIdVariants implements GetProductsIdVariants operation.
//
// Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER
// FIELDS. The variants can also be paginated.
//
// GET /admin/products/{id}/variants
func (UnimplementedHandler) GetProductsIdVariants(ctx context.Context, req jx.Raw, params GetProductsIdVariantsParams) (r GetProductsIdVariantsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProductsIdVariantsVariantID implements GetProductsIdVariantsVariant_id operation.
//
// Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER
// FIELDS. The variants can also be paginated.
//
// GET /admin/products/{id}/variants/{variant_id}
func (UnimplementedHandler) GetProductsIdVariantsVariantID(ctx context.Context, req jx.Raw, params GetProductsIdVariantsVariantIDParams) (r GetProductsIdVariantsVariantIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPromotions implements GetPromotions operation.
//
// Retrieve a list of promotions. The promotions can be filtered by fields such as `id`. The
// promotions can also be sorted or paginated.
//
// GET /admin/promotions
func (UnimplementedHandler) GetPromotions(ctx context.Context, req jx.Raw) (r GetPromotionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPromotionsId implements GetPromotionsId operation.
//
// Retrieve a promotion by its ID. You can expand the promotion's relations or select the fields that
// should be returned.
//
// GET /admin/promotions/{id}
func (UnimplementedHandler) GetPromotionsId(ctx context.Context, req OptAdminGetPromotionsParams, params GetPromotionsIdParams) (r GetPromotionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRegions implements GetRegions operation.
//
// Retrieve a list of regions. The regions can be filtered by fields such as `id`. The regions can
// also be sorted or paginated.
//
// GET /admin/regions
func (UnimplementedHandler) GetRegions(ctx context.Context, req jx.Raw) (r GetRegionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRegionsId implements GetRegionsId operation.
//
// Retrieve a region by its ID. You can expand the region's relations or select the fields that
// should be returned.
//
// GET /admin/regions/{id}
func (UnimplementedHandler) GetRegionsId(ctx context.Context, req jx.Raw, params GetRegionsIdParams) (r GetRegionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetSalesChannels implements GetSalesChannels operation.
//
// Retrieve a list of sales channels. The sales channels can be filtered by fields such as `id`. The
// sales channels can also be sorted or paginated.
//
// GET /admin/sales-channels
func (UnimplementedHandler) GetSalesChannels(ctx context.Context, req jx.Raw) (r GetSalesChannelsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetSalesChannelsId implements GetSalesChannelsId operation.
//
// Retrieve a sales channel by its ID. You can expand the sales channel's relations or select the
// fields that should be returned.
//
// GET /admin/sales-channels/{id}
func (UnimplementedHandler) GetSalesChannelsId(ctx context.Context, req jx.Raw, params GetSalesChannelsIdParams) (r GetSalesChannelsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetStockLocationsId implements GetStockLocationsId operation.
//
// Retrieve a stock location by its ID. You can expand the stock location's relations or select the
// fields that should be returned.
//
// GET /admin/stock-locations/{id}
func (UnimplementedHandler) GetStockLocationsId(ctx context.Context, params GetStockLocationsIdParams) (r GetStockLocationsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetStores implements GetStores operation.
//
// Retrieve a list of stores. The stores can be filtered by fields such as `id`. The stores can also
// be sorted or paginated.
//
// GET /admin/stores
func (UnimplementedHandler) GetStores(ctx context.Context, req jx.Raw) (r GetStoresRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetStoresId implements GetStoresId operation.
//
// Retrieve a store by its ID. You can expand the store's relations or select the fields that should
// be returned.
//
// GET /admin/stores/{id}
func (UnimplementedHandler) GetStoresId(ctx context.Context, req jx.Raw, params GetStoresIdParams) (r GetStoresIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTaxRates implements GetTaxRates operation.
//
// Retrieve a list of tax rates. The tax rates can be filtered by fields such as `id`. The tax rates
// can also be sorted or paginated.
//
// GET /admin/tax-rates
func (UnimplementedHandler) GetTaxRates(ctx context.Context, req jx.Raw) (r GetTaxRatesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTaxRatesId implements GetTaxRatesId operation.
//
// Retrieve a tax rate by its ID. You can expand the tax rate's relations or select the fields that
// should be returned.
//
// GET /admin/tax-rates/{id}
func (UnimplementedHandler) GetTaxRatesId(ctx context.Context, req jx.Raw, params GetTaxRatesIdParams) (r GetTaxRatesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetUsers implements GetUsers operation.
//
// Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be
// sorted or paginated.
//
// GET /admin/users
func (UnimplementedHandler) GetUsers(ctx context.Context, req jx.Raw) (r GetUsersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetUsersId implements GetUsersId operation.
//
// Retrieve a user by its ID. You can expand the user's relations or select the fields that should be
// returned.
//
// GET /admin/users/{id}
func (UnimplementedHandler) GetUsersId(ctx context.Context, req jx.Raw, params GetUsersIdParams) (r GetUsersIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetUsersMe implements GetUsersMe operation.
//
// Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be
// sorted or paginated.
//
// GET /admin/users/me
func (UnimplementedHandler) GetUsersMe(ctx context.Context, req jx.Raw) (r GetUsersMeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetWorkflowsExecutions implements GetWorkflowsExecutions operation.
//
// Retrieve a list of workflows executions. The workflows executions can be filtered by fields such
// as `id`. The workflows executions can also be sorted or paginated.
//
// GET /admin/workflows-executions
func (UnimplementedHandler) GetWorkflowsExecutions(ctx context.Context, req jx.Raw) (r GetWorkflowsExecutionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetWorkflowsExecutionsId implements GetWorkflowsExecutionsId operation.
//
// Retrieve a workflows execution by its ID. You can expand the workflows execution's relations or
// select the fields that should be returned.
//
// GET /admin/workflows-executions/{id}
func (UnimplementedHandler) GetWorkflowsExecutionsId(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsIdParams) (r GetWorkflowsExecutionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetWorkflowsExecutionsWorkflowIdSubscribe implements GetWorkflowsExecutionsWorkflow_idSubscribe operation.
//
// Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields
// like FILTER FIELDS. The subscribes can also be paginated.
//
// GET /admin/workflows-executions/{workflow_id}/subscribe
func (UnimplementedHandler) GetWorkflowsExecutionsWorkflowIdSubscribe(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsWorkflowIdSubscribeParams) (r GetWorkflowsExecutionsWorkflowIdSubscribeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetWorkflowsExecutionsWorkflowIdTransactionID implements GetWorkflowsExecutionsWorkflow_idTransaction_id operation.
//
// Retrieve a list of  in a workflows execution. The  can be filtered by fields like FILTER FIELDS.
// The  can also be paginated.
//
// GET /admin/workflows-executions/{workflow_id}/{transaction_id}
func (UnimplementedHandler) GetWorkflowsExecutionsWorkflowIdTransactionID(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsWorkflowIdTransactionIDParams) (r GetWorkflowsExecutionsWorkflowIdTransactionIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribe implements GetWorkflowsExecutionsWorkflow_idTransaction_idStep_idSubscribe operation.
//
// Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields
// like FILTER FIELDS. The subscribes can also be paginated.
//
// GET /admin/workflows-executions/{workflow_id}/{transaction_id}/{step_id}/subscribe
func (UnimplementedHandler) GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribe(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribeParams) (r GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostApiKeys implements PostApiKeys operation.
//
// Create a api key.
//
// POST /admin/api-keys
func (UnimplementedHandler) PostApiKeys(ctx context.Context, req jx.Raw) (r PostApiKeysRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostApiKeysId implements PostApiKeysId operation.
//
// Update a api key's details.
//
// POST /admin/api-keys/{id}
func (UnimplementedHandler) PostApiKeysId(ctx context.Context, req jx.Raw, params PostApiKeysIdParams) (r PostApiKeysIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostApiKeysIdRevoke implements PostApiKeysIdRevoke operation.
//
// Add a list of revokes to a api key.
//
// POST /admin/api-keys/{id}/revoke
func (UnimplementedHandler) PostApiKeysIdRevoke(ctx context.Context, req jx.Raw, params PostApiKeysIdRevokeParams) (r PostApiKeysIdRevokeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCampaigns implements PostCampaigns operation.
//
// Create a campaign.
//
// POST /admin/campaigns
func (UnimplementedHandler) PostCampaigns(ctx context.Context, req jx.Raw) (r PostCampaignsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCampaignsId implements PostCampaignsId operation.
//
// Update a campaign's details.
//
// POST /admin/campaigns/{id}
func (UnimplementedHandler) PostCampaignsId(ctx context.Context, req OptAdminPostCampaignsReq, params PostCampaignsIdParams) (r PostCampaignsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCollections implements PostCollections operation.
//
// Create a collection.
//
// POST /admin/collections
func (UnimplementedHandler) PostCollections(ctx context.Context, req jx.Raw) (r PostCollectionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCollectionsId implements PostCollectionsId operation.
//
// Update a collection's details.
//
// POST /admin/collections/{id}
func (UnimplementedHandler) PostCollectionsId(ctx context.Context, req jx.Raw, params PostCollectionsIdParams) (r PostCollectionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomerGroups implements PostCustomerGroups operation.
//
// Create a customer group.
//
// POST /admin/customer-groups
func (UnimplementedHandler) PostCustomerGroups(ctx context.Context, req jx.Raw) (r PostCustomerGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomerGroupsId implements PostCustomerGroupsId operation.
//
// Update a customer group's details.
//
// POST /admin/customer-groups/{id}
func (UnimplementedHandler) PostCustomerGroupsId(ctx context.Context, req jx.Raw, params PostCustomerGroupsIdParams) (r PostCustomerGroupsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomerGroupsIdCustomersBatch implements PostCustomerGroupsIdCustomersBatch operation.
//
// Add a list of customers to a customer group.
//
// POST /admin/customer-groups/{id}/customers/batch
func (UnimplementedHandler) PostCustomerGroupsIdCustomersBatch(ctx context.Context, req OptAdminPostCustomerGroupsGroupCustomersBatchReq, params PostCustomerGroupsIdCustomersBatchParams) (r PostCustomerGroupsIdCustomersBatchRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomerGroupsIdCustomersRemove implements PostCustomerGroupsIdCustomersRemove operation.
//
// Add a list of removes to a customer group.
//
// POST /admin/customer-groups/{id}/customers/remove
func (UnimplementedHandler) PostCustomerGroupsIdCustomersRemove(ctx context.Context, req OptAdminPostCustomerGroupsGroupCustomersBatchReq, params PostCustomerGroupsIdCustomersRemoveParams) (r PostCustomerGroupsIdCustomersRemoveRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomers implements PostCustomers operation.
//
// Create a customer.
//
// POST /admin/customers
func (UnimplementedHandler) PostCustomers(ctx context.Context, req jx.Raw) (r PostCustomersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomersId implements PostCustomersId operation.
//
// Update a customer's details.
//
// POST /admin/customers/{id}
func (UnimplementedHandler) PostCustomersId(ctx context.Context, req jx.Raw, params PostCustomersIdParams) (r PostCustomersIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomersIdAddresses implements PostCustomersIdAddresses operation.
//
// Add a list of addresses to a customer.
//
// POST /admin/customers/{id}/addresses
func (UnimplementedHandler) PostCustomersIdAddresses(ctx context.Context, req jx.Raw, params PostCustomersIdAddressesParams) (r PostCustomersIdAddressesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostCustomersIdAddressesAddressID implements PostCustomersIdAddressesAddress_id operation.
//
// Add a list of addresses to a customer.
//
// POST /admin/customers/{id}/addresses/{address_id}
func (UnimplementedHandler) PostCustomersIdAddressesAddressID(ctx context.Context, req jx.Raw, params PostCustomersIdAddressesAddressIDParams) (r PostCustomersIdAddressesAddressIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostFulfillmentShippingOptionsIdRulesBatchAdd implements PostFulfillmentShippingOptionsIdRulesBatchAdd operation.
//
// Add a list of adds to a fulfillment.
//
// POST /admin/fulfillment/shipping-options/{id}/rules/batch/add
func (UnimplementedHandler) PostFulfillmentShippingOptionsIdRulesBatchAdd(ctx context.Context, req OptAdminPostFulfillmentShippingOptionsRulesBatchAddReq, params PostFulfillmentShippingOptionsIdRulesBatchAddParams) (r PostFulfillmentShippingOptionsIdRulesBatchAddRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostFulfillmentShippingOptionsIdRulesBatchRemove implements PostFulfillmentShippingOptionsIdRulesBatchRemove operation.
//
// Add a list of removes to a fulfillment.
//
// POST /admin/fulfillment/shipping-options/{id}/rules/batch/remove
func (UnimplementedHandler) PostFulfillmentShippingOptionsIdRulesBatchRemove(ctx context.Context, req OptAdminPostFulfillmentShippingOptionsRulesBatchRemoveReq, params PostFulfillmentShippingOptionsIdRulesBatchRemoveParams) (r PostFulfillmentShippingOptionsIdRulesBatchRemoveRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostInventoryItems implements PostInventoryItems operation.
//
// Create a inventory item.
//
// POST /admin/inventory-items
func (UnimplementedHandler) PostInventoryItems(ctx context.Context, req OptAdminPostInventoryItemsReq) (r PostInventoryItemsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostInventoryItemsId implements PostInventoryItemsId operation.
//
// Update a inventory item's details.
//
// POST /admin/inventory-items/{id}
func (UnimplementedHandler) PostInventoryItemsId(ctx context.Context, req OptAdminPostInventoryItemsInventoryItemReq, params PostInventoryItemsIdParams) (r PostInventoryItemsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostInventoryItemsIdLocationLevels implements PostInventoryItemsIdLocationLevels operation.
//
// Add a list of location levels to a inventory item.
//
// POST /admin/inventory-items/{id}/location-levels
func (UnimplementedHandler) PostInventoryItemsIdLocationLevels(ctx context.Context, req OptAdminPostInventoryItemsItemLocationLevelsReq, params PostInventoryItemsIdLocationLevelsParams) (r PostInventoryItemsIdLocationLevelsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostInventoryItemsIdLocationLevelsLocationID implements PostInventoryItemsIdLocationLevelsLocation_id operation.
//
// Add a list of location levels to a inventory item.
//
// POST /admin/inventory-items/{id}/location-levels/{location_id}
func (UnimplementedHandler) PostInventoryItemsIdLocationLevelsLocationID(ctx context.Context, req OptAdminPostInventoryItemsItemLocationLevelsLevelReq, params PostInventoryItemsIdLocationLevelsLocationIDParams) (r PostInventoryItemsIdLocationLevelsLocationIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostInvites implements PostInvites operation.
//
// Create a invite.
//
// POST /admin/invites
func (UnimplementedHandler) PostInvites(ctx context.Context, req jx.Raw) (r PostInvitesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostInvitesAccept implements PostInvitesAccept operation.
//
// Create a invite.
//
// POST /admin/invites/accept
func (UnimplementedHandler) PostInvitesAccept(ctx context.Context, req OptAdminPostInvitesInviteAcceptReq) (r PostInvitesAcceptRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostInvitesIdResend implements PostInvitesIdResend operation.
//
// Add a list of resends to a invite.
//
// POST /admin/invites/{id}/resend
func (UnimplementedHandler) PostInvitesIdResend(ctx context.Context, req jx.Raw, params PostInvitesIdResendParams) (r PostInvitesIdResendRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPaymentsIdCapture implements PostPaymentsIdCapture operation.
//
// Add a list of captures to a payment.
//
// POST /admin/payments/{id}/capture
func (UnimplementedHandler) PostPaymentsIdCapture(ctx context.Context, req OptAdminPostPaymentsCapturesReq, params PostPaymentsIdCaptureParams) (r PostPaymentsIdCaptureRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPaymentsIdRefund implements PostPaymentsIdRefund operation.
//
// Add a list of refunds to a payment.
//
// POST /admin/payments/{id}/refund
func (UnimplementedHandler) PostPaymentsIdRefund(ctx context.Context, req OptAdminPostPaymentsRefundsReq, params PostPaymentsIdRefundParams) (r PostPaymentsIdRefundRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPriceLists implements PostPriceLists operation.
//
// Create a price list.
//
// POST /admin/price-lists
func (UnimplementedHandler) PostPriceLists(ctx context.Context, req OptAdminPostPriceListsReq) (r PostPriceListsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPriceListsId implements PostPriceListsId operation.
//
// Update a price list's details.
//
// POST /admin/price-lists/{id}
func (UnimplementedHandler) PostPriceListsId(ctx context.Context, req OptAdminPostPriceListsPriceListReq, params PostPriceListsIdParams) (r PostPriceListsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPriceListsIdPricesBatchAdd implements PostPriceListsIdPricesBatchAdd operation.
//
// Add a list of adds to a price list.
//
// POST /admin/price-lists/{id}/prices/batch/add
func (UnimplementedHandler) PostPriceListsIdPricesBatchAdd(ctx context.Context, req OptAdminPostPriceListsPriceListPricesBatchAddReq, params PostPriceListsIdPricesBatchAddParams) (r PostPriceListsIdPricesBatchAddRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPriceListsIdPricesBatchRemove implements PostPriceListsIdPricesBatchRemove operation.
//
// Add a list of removes to a price list.
//
// POST /admin/price-lists/{id}/prices/batch/remove
func (UnimplementedHandler) PostPriceListsIdPricesBatchRemove(ctx context.Context, req OptAdminPostPriceListsPriceListPricesBatchRemoveReq, params PostPriceListsIdPricesBatchRemoveParams) (r PostPriceListsIdPricesBatchRemoveRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPricingRuleTypes implements PostPricingRuleTypes operation.
//
// Create a pricing.
//
// POST /admin/pricing/rule-types
func (UnimplementedHandler) PostPricingRuleTypes(ctx context.Context, req OptAdminPostPricingRuleTypesReq) (r PostPricingRuleTypesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPricingRuleTypesId implements PostPricingRuleTypesId operation.
//
// Add a list of rule types to a pricing.
//
// POST /admin/pricing/rule-types/{id}
func (UnimplementedHandler) PostPricingRuleTypesId(ctx context.Context, req OptAdminPostPricingRuleTypesRuleTypeReq, params PostPricingRuleTypesIdParams) (r PostPricingRuleTypesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostProducts implements PostProducts operation.
//
// Create a product.
//
// POST /admin/products
func (UnimplementedHandler) PostProducts(ctx context.Context, req jx.Raw) (r PostProductsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostProductsId implements PostProductsId operation.
//
// Update a product's details.
//
// POST /admin/products/{id}
func (UnimplementedHandler) PostProductsId(ctx context.Context, req jx.Raw, params PostProductsIdParams) (r PostProductsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostProductsIdOptions implements PostProductsIdOptions operation.
//
// Add a list of options to a product.
//
// POST /admin/products/{id}/options
func (UnimplementedHandler) PostProductsIdOptions(ctx context.Context, req jx.Raw, params PostProductsIdOptionsParams) (r PostProductsIdOptionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostProductsIdOptionsOptionID implements PostProductsIdOptionsOption_id operation.
//
// Add a list of options to a product.
//
// POST /admin/products/{id}/options/{option_id}
func (UnimplementedHandler) PostProductsIdOptionsOptionID(ctx context.Context, req jx.Raw, params PostProductsIdOptionsOptionIDParams) (r PostProductsIdOptionsOptionIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostProductsIdVariants implements PostProductsIdVariants operation.
//
// Add a list of variants to a product.
//
// POST /admin/products/{id}/variants
func (UnimplementedHandler) PostProductsIdVariants(ctx context.Context, req jx.Raw, params PostProductsIdVariantsParams) (r PostProductsIdVariantsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostProductsIdVariantsVariantID implements PostProductsIdVariantsVariant_id operation.
//
// Add a list of variants to a product.
//
// POST /admin/products/{id}/variants/{variant_id}
func (UnimplementedHandler) PostProductsIdVariantsVariantID(ctx context.Context, req jx.Raw, params PostProductsIdVariantsVariantIDParams) (r PostProductsIdVariantsVariantIDRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotions implements PostPromotions operation.
//
// Create a promotion.
//
// POST /admin/promotions
func (UnimplementedHandler) PostPromotions(ctx context.Context, req jx.Raw) (r PostPromotionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsId implements PostPromotionsId operation.
//
// Update a promotion's details.
//
// POST /admin/promotions/{id}
func (UnimplementedHandler) PostPromotionsId(ctx context.Context, req OptAdminPostPromotionsPromotionReq, params PostPromotionsIdParams) (r PostPromotionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsIdBuyRulesBatchAdd implements PostPromotionsIdBuyRulesBatchAdd operation.
//
// Add a list of adds to a promotion.
//
// POST /admin/promotions/{id}/buy-rules/batch/add
func (UnimplementedHandler) PostPromotionsIdBuyRulesBatchAdd(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchAddReq, params PostPromotionsIdBuyRulesBatchAddParams) (r PostPromotionsIdBuyRulesBatchAddRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsIdBuyRulesBatchRemove implements PostPromotionsIdBuyRulesBatchRemove operation.
//
// Add a list of removes to a promotion.
//
// POST /admin/promotions/{id}/buy-rules/batch/remove
func (UnimplementedHandler) PostPromotionsIdBuyRulesBatchRemove(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchRemoveReq, params PostPromotionsIdBuyRulesBatchRemoveParams) (r PostPromotionsIdBuyRulesBatchRemoveRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsIdRulesBatchAdd implements PostPromotionsIdRulesBatchAdd operation.
//
// Add a list of adds to a promotion.
//
// POST /admin/promotions/{id}/rules/batch/add
func (UnimplementedHandler) PostPromotionsIdRulesBatchAdd(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchAddReq, params PostPromotionsIdRulesBatchAddParams) (r PostPromotionsIdRulesBatchAddRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsIdRulesBatchRemove implements PostPromotionsIdRulesBatchRemove operation.
//
// Add a list of removes to a promotion.
//
// POST /admin/promotions/{id}/rules/batch/remove
func (UnimplementedHandler) PostPromotionsIdRulesBatchRemove(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchRemoveReq, params PostPromotionsIdRulesBatchRemoveParams) (r PostPromotionsIdRulesBatchRemoveRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsIdRulesBatchUpdate implements PostPromotionsIdRulesBatchUpdate operation.
//
// Add a list of updates to a promotion.
//
// POST /admin/promotions/{id}/rules/batch/update
func (UnimplementedHandler) PostPromotionsIdRulesBatchUpdate(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchUpdateReq, params PostPromotionsIdRulesBatchUpdateParams) (r PostPromotionsIdRulesBatchUpdateRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsIdTargetRulesBatchAdd implements PostPromotionsIdTargetRulesBatchAdd operation.
//
// Add a list of adds to a promotion.
//
// POST /admin/promotions/{id}/target-rules/batch/add
func (UnimplementedHandler) PostPromotionsIdTargetRulesBatchAdd(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchAddReq, params PostPromotionsIdTargetRulesBatchAddParams) (r PostPromotionsIdTargetRulesBatchAddRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostPromotionsIdTargetRulesBatchRemove implements PostPromotionsIdTargetRulesBatchRemove operation.
//
// Add a list of removes to a promotion.
//
// POST /admin/promotions/{id}/target-rules/batch/remove
func (UnimplementedHandler) PostPromotionsIdTargetRulesBatchRemove(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchRemoveReq, params PostPromotionsIdTargetRulesBatchRemoveParams) (r PostPromotionsIdTargetRulesBatchRemoveRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostRegions implements PostRegions operation.
//
// Create a region.
//
// POST /admin/regions
func (UnimplementedHandler) PostRegions(ctx context.Context, req jx.Raw) (r PostRegionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostRegionsId implements PostRegionsId operation.
//
// Update a region's details.
//
// POST /admin/regions/{id}
func (UnimplementedHandler) PostRegionsId(ctx context.Context, req jx.Raw, params PostRegionsIdParams) (r PostRegionsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostSalesChannels implements PostSalesChannels operation.
//
// Create a sales channel.
//
// POST /admin/sales-channels
func (UnimplementedHandler) PostSalesChannels(ctx context.Context, req jx.Raw) (r PostSalesChannelsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostSalesChannelsId implements PostSalesChannelsId operation.
//
// Update a sales channel's details.
//
// POST /admin/sales-channels/{id}
func (UnimplementedHandler) PostSalesChannelsId(ctx context.Context, req jx.Raw, params PostSalesChannelsIdParams) (r PostSalesChannelsIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostSalesChannelsIdProductsBatchAdd implements PostSalesChannelsIdProductsBatchAdd operation.
//
// Add a list of adds to a sales channel.
//
// POST /admin/sales-channels/{id}/products/batch/add
func (UnimplementedHandler) PostSalesChannelsIdProductsBatchAdd(ctx context.Context, req jx.Raw, params PostSalesChannelsIdProductsBatchAddParams) (r PostSalesChannelsIdProductsBatchAddRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostStockLocations implements PostStockLocations operation.
//
// Create a stock location.
//
// POST /admin/stock-locations
func (UnimplementedHandler) PostStockLocations(ctx context.Context, req OptAdminPostStockLocationsReq) (r PostStockLocationsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostStoresId implements PostStoresId operation.
//
// Update a store's details.
//
// POST /admin/stores/{id}
func (UnimplementedHandler) PostStoresId(ctx context.Context, req jx.Raw, params PostStoresIdParams) (r PostStoresIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostTaxRates implements PostTaxRates operation.
//
// Create a tax rate.
//
// POST /admin/tax-rates
func (UnimplementedHandler) PostTaxRates(ctx context.Context, req OptAdminPostTaxRatesReq) (r PostTaxRatesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostTaxRatesId implements PostTaxRatesId operation.
//
// Update a tax rate's details.
//
// POST /admin/tax-rates/{id}
func (UnimplementedHandler) PostTaxRatesId(ctx context.Context, req OptAdminPostTaxRatesTaxRateReq, params PostTaxRatesIdParams) (r PostTaxRatesIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostTaxRatesIdRules implements PostTaxRatesIdRules operation.
//
// Add a list of rules to a tax rate.
//
// POST /admin/tax-rates/{id}/rules
func (UnimplementedHandler) PostTaxRatesIdRules(ctx context.Context, req OptAdminPostTaxRatesTaxRateRulesReq, params PostTaxRatesIdRulesParams) (r PostTaxRatesIdRulesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostTaxRegions implements PostTaxRegions operation.
//
// Create a tax region.
//
// POST /admin/tax-regions
func (UnimplementedHandler) PostTaxRegions(ctx context.Context, req OptAdminPostTaxRegionsReq) (r PostTaxRegionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostUsers implements PostUsers operation.
//
// Create a user.
//
// POST /admin/users
func (UnimplementedHandler) PostUsers(ctx context.Context, req jx.Raw) (r PostUsersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostUsersId implements PostUsersId operation.
//
// Update a user's details.
//
// POST /admin/users/{id}
func (UnimplementedHandler) PostUsersId(ctx context.Context, req OptAdminUpdateUserRequest, params PostUsersIdParams) (r PostUsersIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostWorkflowsExecutionsWorkflowIdRun implements PostWorkflowsExecutionsWorkflow_idRun operation.
//
// Add a list of runs to a workflows execution.
//
// POST /admin/workflows-executions/{workflow_id}/run
func (UnimplementedHandler) PostWorkflowsExecutionsWorkflowIdRun(ctx context.Context, req OptAdminPostWorkflowsRunReq, params PostWorkflowsExecutionsWorkflowIdRunParams) (r PostWorkflowsExecutionsWorkflowIdRunRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostWorkflowsExecutionsWorkflowIdStepsFailure implements PostWorkflowsExecutionsWorkflow_idStepsFailure operation.
//
// Add a list of failures to a workflows execution.
//
// POST /admin/workflows-executions/{workflow_id}/steps/failure
func (UnimplementedHandler) PostWorkflowsExecutionsWorkflowIdStepsFailure(ctx context.Context, req OptAdminPostWorkflowsAsyncResponseReq, params PostWorkflowsExecutionsWorkflowIdStepsFailureParams) (r PostWorkflowsExecutionsWorkflowIdStepsFailureRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostWorkflowsExecutionsWorkflowIdStepsSuccess implements PostWorkflowsExecutionsWorkflow_idStepsSuccess operation.
//
// Add a list of successes to a workflows execution.
//
// POST /admin/workflows-executions/{workflow_id}/steps/success
func (UnimplementedHandler) PostWorkflowsExecutionsWorkflowIdStepsSuccess(ctx context.Context, req OptAdminPostWorkflowsAsyncResponseReq, params PostWorkflowsExecutionsWorkflowIdStepsSuccessParams) (r PostWorkflowsExecutionsWorkflowIdStepsSuccessRes, _ error) {
	return r, ht.ErrNotImplemented
}
