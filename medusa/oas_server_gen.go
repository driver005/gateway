// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	"github.com/go-faster/jx"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// DeleteApiKeysId implements DeleteApiKeysId operation.
	//
	// Delete a api key.
	//
	// DELETE /admin/api-keys/{id}
	DeleteApiKeysId(ctx context.Context, req jx.Raw, params DeleteApiKeysIdParams) (DeleteApiKeysIdRes, error)
	// DeleteCampaignsId implements DeleteCampaignsId operation.
	//
	// Delete a campaign.
	//
	// DELETE /admin/campaigns/{id}
	DeleteCampaignsId(ctx context.Context, req jx.Raw, params DeleteCampaignsIdParams) (DeleteCampaignsIdRes, error)
	// DeleteCollectionsId implements DeleteCollectionsId operation.
	//
	// Delete a collection.
	//
	// DELETE /admin/collections/{id}
	DeleteCollectionsId(ctx context.Context, req jx.Raw, params DeleteCollectionsIdParams) (DeleteCollectionsIdRes, error)
	// DeleteCustomerGroupsId implements DeleteCustomerGroupsId operation.
	//
	// Delete a customer group.
	//
	// DELETE /admin/customer-groups/{id}
	DeleteCustomerGroupsId(ctx context.Context, req jx.Raw, params DeleteCustomerGroupsIdParams) (DeleteCustomerGroupsIdRes, error)
	// DeleteCustomersId implements DeleteCustomersId operation.
	//
	// Delete a customer.
	//
	// DELETE /admin/customers/{id}
	DeleteCustomersId(ctx context.Context, req jx.Raw, params DeleteCustomersIdParams) (DeleteCustomersIdRes, error)
	// DeleteCustomersIdAddressesAddressID implements DeleteCustomersIdAddressesAddress_id operation.
	//
	// Remove a list of addresses from a customer. This doesn't delete the Address, only the association
	// between the Address and the customer.
	//
	// DELETE /admin/customers/{id}/addresses/{address_id}
	DeleteCustomersIdAddressesAddressID(ctx context.Context, req jx.Raw, params DeleteCustomersIdAddressesAddressIDParams) (DeleteCustomersIdAddressesAddressIDRes, error)
	// DeleteInventoryItemsId implements DeleteInventoryItemsId operation.
	//
	// Delete a inventory item.
	//
	// DELETE /admin/inventory-items/{id}
	DeleteInventoryItemsId(ctx context.Context, req jx.Raw, params DeleteInventoryItemsIdParams) (DeleteInventoryItemsIdRes, error)
	// DeleteInventoryItemsIdLocationLevelsLocationID implements DeleteInventoryItemsIdLocationLevelsLocation_id operation.
	//
	// Remove a list of location levels from a inventory item. This doesn't delete the Location Level,
	// only the association between the Location Level and the inventory item.
	//
	// DELETE /admin/inventory-items/{id}/location-levels/{location_id}
	DeleteInventoryItemsIdLocationLevelsLocationID(ctx context.Context, req jx.Raw, params DeleteInventoryItemsIdLocationLevelsLocationIDParams) (DeleteInventoryItemsIdLocationLevelsLocationIDRes, error)
	// DeleteInvitesId implements DeleteInvitesId operation.
	//
	// Delete a invite.
	//
	// DELETE /admin/invites/{id}
	DeleteInvitesId(ctx context.Context, req jx.Raw, params DeleteInvitesIdParams) (DeleteInvitesIdRes, error)
	// DeletePriceListsId implements DeletePriceListsId operation.
	//
	// Delete a price list.
	//
	// DELETE /admin/price-lists/{id}
	DeletePriceListsId(ctx context.Context, req jx.Raw, params DeletePriceListsIdParams) (DeletePriceListsIdRes, error)
	// DeletePricingRuleTypesId implements DeletePricingRuleTypesId operation.
	//
	// Remove a list of rule types from a pricing. This doesn't delete the Rule Type, only the
	// association between the Rule Type and the pricing.
	//
	// DELETE /admin/pricing/rule-types/{id}
	DeletePricingRuleTypesId(ctx context.Context, req *AdminDeletePricingRuleTypesRuleTypeReq, params DeletePricingRuleTypesIdParams) (DeletePricingRuleTypesIdRes, error)
	// DeleteProductsId implements DeleteProductsId operation.
	//
	// Delete a product.
	//
	// DELETE /admin/products/{id}
	DeleteProductsId(ctx context.Context, req jx.Raw, params DeleteProductsIdParams) (DeleteProductsIdRes, error)
	// DeleteProductsIdOptionsOptionID implements DeleteProductsIdOptionsOption_id operation.
	//
	// Remove a list of options from a product. This doesn't delete the Option, only the association
	// between the Option and the product.
	//
	// DELETE /admin/products/{id}/options/{option_id}
	DeleteProductsIdOptionsOptionID(ctx context.Context, req jx.Raw, params DeleteProductsIdOptionsOptionIDParams) (DeleteProductsIdOptionsOptionIDRes, error)
	// DeleteProductsIdVariantsVariantID implements DeleteProductsIdVariantsVariant_id operation.
	//
	// Remove a list of variants from a product. This doesn't delete the Variant, only the association
	// between the Variant and the product.
	//
	// DELETE /admin/products/{id}/variants/{variant_id}
	DeleteProductsIdVariantsVariantID(ctx context.Context, req jx.Raw, params DeleteProductsIdVariantsVariantIDParams) (DeleteProductsIdVariantsVariantIDRes, error)
	// DeletePromotionsId implements DeletePromotionsId operation.
	//
	// Delete a promotion.
	//
	// DELETE /admin/promotions/{id}
	DeletePromotionsId(ctx context.Context, req jx.Raw, params DeletePromotionsIdParams) (DeletePromotionsIdRes, error)
	// DeleteRegionsId implements DeleteRegionsId operation.
	//
	// Delete a region.
	//
	// DELETE /admin/regions/{id}
	DeleteRegionsId(ctx context.Context, req jx.Raw, params DeleteRegionsIdParams) (DeleteRegionsIdRes, error)
	// DeleteSalesChannelsId implements DeleteSalesChannelsId operation.
	//
	// Delete a sales channel.
	//
	// DELETE /admin/sales-channels/{id}
	DeleteSalesChannelsId(ctx context.Context, req jx.Raw, params DeleteSalesChannelsIdParams) (DeleteSalesChannelsIdRes, error)
	// DeleteStockLocationsId implements DeleteStockLocationsId operation.
	//
	// Delete a stock location.
	//
	// DELETE /admin/stock-locations/{id}
	DeleteStockLocationsId(ctx context.Context, params DeleteStockLocationsIdParams) (DeleteStockLocationsIdRes, error)
	// DeleteTaxRatesId implements DeleteTaxRatesId operation.
	//
	// Delete a tax rate.
	//
	// DELETE /admin/tax-rates/{id}
	DeleteTaxRatesId(ctx context.Context, req jx.Raw, params DeleteTaxRatesIdParams) (DeleteTaxRatesIdRes, error)
	// DeleteTaxRatesIdRulesRuleID implements DeleteTaxRatesIdRulesRule_id operation.
	//
	// Remove a list of rules from a tax rate. This doesn't delete the Rule, only the association between
	// the Rule and the tax rate.
	//
	// DELETE /admin/tax-rates/{id}/rules/{rule_id}
	DeleteTaxRatesIdRulesRuleID(ctx context.Context, req jx.Raw, params DeleteTaxRatesIdRulesRuleIDParams) (DeleteTaxRatesIdRulesRuleIDRes, error)
	// DeleteTaxRegionsId implements DeleteTaxRegionsId operation.
	//
	// Delete a tax region.
	//
	// DELETE /admin/tax-regions/{id}
	DeleteTaxRegionsId(ctx context.Context, req jx.Raw, params DeleteTaxRegionsIdParams) (DeleteTaxRegionsIdRes, error)
	// DeleteUsersId implements DeleteUsersId operation.
	//
	// Delete a user.
	//
	// DELETE /admin/users/{id}
	DeleteUsersId(ctx context.Context, req jx.Raw, params DeleteUsersIdParams) (DeleteUsersIdRes, error)
	// GetApiKeys implements GetApiKeys operation.
	//
	// Retrieve a list of api keys. The api keys can be filtered by fields such as `id`. The api keys can
	// also be sorted or paginated.
	//
	// GET /admin/api-keys
	GetApiKeys(ctx context.Context, req jx.Raw) (GetApiKeysRes, error)
	// GetApiKeysId implements GetApiKeysId operation.
	//
	// Retrieve a api key by its ID. You can expand the api key's relations or select the fields that
	// should be returned.
	//
	// GET /admin/api-keys/{id}
	GetApiKeysId(ctx context.Context, req jx.Raw, params GetApiKeysIdParams) (GetApiKeysIdRes, error)
	// GetCampaigns implements GetCampaigns operation.
	//
	// Retrieve a list of campaigns. The campaigns can be filtered by fields such as `id`. The campaigns
	// can also be sorted or paginated.
	//
	// GET /admin/campaigns
	GetCampaigns(ctx context.Context, req jx.Raw) (GetCampaignsRes, error)
	// GetCampaignsId implements GetCampaignsId operation.
	//
	// Retrieve a campaign by its ID. You can expand the campaign's relations or select the fields that
	// should be returned.
	//
	// GET /admin/campaigns/{id}
	GetCampaignsId(ctx context.Context, req jx.Raw, params GetCampaignsIdParams) (GetCampaignsIdRes, error)
	// GetCollections implements GetCollections operation.
	//
	// Retrieve a list of collections. The collections can be filtered by fields such as `id`. The
	// collections can also be sorted or paginated.
	//
	// GET /admin/collections
	GetCollections(ctx context.Context, req jx.Raw) (GetCollectionsRes, error)
	// GetCollectionsId implements GetCollectionsId operation.
	//
	// Retrieve a collection by its ID. You can expand the collection's relations or select the fields
	// that should be returned.
	//
	// GET /admin/collections/{id}
	GetCollectionsId(ctx context.Context, req jx.Raw, params GetCollectionsIdParams) (GetCollectionsIdRes, error)
	// GetCurrencies implements GetCurrencies operation.
	//
	// Retrieve a list of currencies. The currencies can be filtered by fields such as `id`. The
	// currencies can also be sorted or paginated.
	//
	// GET /admin/currencies
	GetCurrencies(ctx context.Context, req jx.Raw) (GetCurrenciesRes, error)
	// GetCurrenciesCode implements GetCurrenciesCode operation.
	//
	// Retrieve a currency by its ID. You can expand the currency's relations or select the fields that
	// should be returned.
	//
	// GET /admin/currencies/{code}
	GetCurrenciesCode(ctx context.Context, req jx.Raw, params GetCurrenciesCodeParams) (GetCurrenciesCodeRes, error)
	// GetCustomerGroups implements GetCustomerGroups operation.
	//
	// Retrieve a list of customer groups. The customer groups can be filtered by fields such as `id`.
	// The customer groups can also be sorted or paginated.
	//
	// GET /admin/customer-groups
	GetCustomerGroups(ctx context.Context, req jx.Raw) (GetCustomerGroupsRes, error)
	// GetCustomerGroupsId implements GetCustomerGroupsId operation.
	//
	// Retrieve a customer group by its ID. You can expand the customer group's relations or select the
	// fields that should be returned.
	//
	// GET /admin/customer-groups/{id}
	GetCustomerGroupsId(ctx context.Context, req jx.Raw, params GetCustomerGroupsIdParams) (GetCustomerGroupsIdRes, error)
	// GetCustomerGroupsIdCustomers implements GetCustomerGroupsIdCustomers operation.
	//
	// Retrieve a list of customers in a customer group. The customers can be filtered by fields like
	// FILTER FIELDS. The customers can also be paginated.
	//
	// GET /admin/customer-groups/{id}/customers
	GetCustomerGroupsIdCustomers(ctx context.Context, req jx.Raw, params GetCustomerGroupsIdCustomersParams) (GetCustomerGroupsIdCustomersRes, error)
	// GetCustomers implements GetCustomers operation.
	//
	// Retrieve a list of customers. The customers can be filtered by fields such as `id`. The customers
	// can also be sorted or paginated.
	//
	// GET /admin/customers
	GetCustomers(ctx context.Context, req jx.Raw) (GetCustomersRes, error)
	// GetCustomersId implements GetCustomersId operation.
	//
	// Retrieve a customer by its ID. You can expand the customer's relations or select the fields that
	// should be returned.
	//
	// GET /admin/customers/{id}
	GetCustomersId(ctx context.Context, req jx.Raw, params GetCustomersIdParams) (GetCustomersIdRes, error)
	// GetCustomersIdAddresses implements GetCustomersIdAddresses operation.
	//
	// Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER
	// FIELDS. The addresses can also be paginated.
	//
	// GET /admin/customers/{id}/addresses
	GetCustomersIdAddresses(ctx context.Context, req jx.Raw, params GetCustomersIdAddressesParams) (GetCustomersIdAddressesRes, error)
	// GetCustomersIdAddressesAddressID implements GetCustomersIdAddressesAddress_id operation.
	//
	// Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER
	// FIELDS. The addresses can also be paginated.
	//
	// GET /admin/customers/{id}/addresses/{address_id}
	GetCustomersIdAddressesAddressID(ctx context.Context, req jx.Raw, params GetCustomersIdAddressesAddressIDParams) (GetCustomersIdAddressesAddressIDRes, error)
	// GetInventoryItems implements GetInventoryItems operation.
	//
	// Retrieve a list of inventory items. The inventory items can be filtered by fields such as `id`.
	// The inventory items can also be sorted or paginated.
	//
	// GET /admin/inventory-items
	GetInventoryItems(ctx context.Context, req jx.Raw) (GetInventoryItemsRes, error)
	// GetInventoryItemsId implements GetInventoryItemsId operation.
	//
	// Retrieve a inventory item by its ID. You can expand the inventory item's relations or select the
	// fields that should be returned.
	//
	// GET /admin/inventory-items/{id}
	GetInventoryItemsId(ctx context.Context, req jx.Raw, params GetInventoryItemsIdParams) (GetInventoryItemsIdRes, error)
	// GetInvites implements GetInvites operation.
	//
	// Retrieve a list of invites. The invites can be filtered by fields such as `id`. The invites can
	// also be sorted or paginated.
	//
	// GET /admin/invites
	GetInvites(ctx context.Context, req jx.Raw) (GetInvitesRes, error)
	// GetInvitesId implements GetInvitesId operation.
	//
	// Retrieve a invite by its ID. You can expand the invite's relations or select the fields that
	// should be returned.
	//
	// GET /admin/invites/{id}
	GetInvitesId(ctx context.Context, req jx.Raw, params GetInvitesIdParams) (GetInvitesIdRes, error)
	// GetPayments implements GetPayments operation.
	//
	// Retrieve a list of payments. The payments can be filtered by fields such as `id`. The payments can
	// also be sorted or paginated.
	//
	// GET /admin/payments
	GetPayments(ctx context.Context, req jx.Raw) (GetPaymentsRes, error)
	// GetPaymentsId implements GetPaymentsId operation.
	//
	// Retrieve a payment by its ID. You can expand the payment's relations or select the fields that
	// should be returned.
	//
	// GET /admin/payments/{id}
	GetPaymentsId(ctx context.Context, req jx.Raw, params GetPaymentsIdParams) (GetPaymentsIdRes, error)
	// GetPriceLists implements GetPriceLists operation.
	//
	// Retrieve a list of price lists. The price lists can be filtered by fields such as `id`. The price
	// lists can also be sorted or paginated.
	//
	// GET /admin/price-lists
	GetPriceLists(ctx context.Context, req jx.Raw) (GetPriceListsRes, error)
	// GetPriceListsId implements GetPriceListsId operation.
	//
	// Retrieve a price list by its ID. You can expand the price list's relations or select the fields
	// that should be returned.
	//
	// GET /admin/price-lists/{id}
	GetPriceListsId(ctx context.Context, req jx.Raw, params GetPriceListsIdParams) (GetPriceListsIdRes, error)
	// GetPricingRuleTypes implements GetPricingRuleTypes operation.
	//
	// Retrieve a list of pricing. The pricing can be filtered by fields such as `id`. The pricing can
	// also be sorted or paginated.
	//
	// GET /admin/pricing/rule-types
	GetPricingRuleTypes(ctx context.Context, req OptAdminGetPricingRuleTypesParams) (GetPricingRuleTypesRes, error)
	// GetPricingRuleTypesId implements GetPricingRuleTypesId operation.
	//
	// Retrieve a list of rule types in a pricing. The rule types can be filtered by fields like FILTER
	// FIELDS. The rule types can also be paginated.
	//
	// GET /admin/pricing/rule-types/{id}
	GetPricingRuleTypesId(ctx context.Context, req OptAdminGetPricingRuleTypesRuleTypeParams, params GetPricingRuleTypesIdParams) (GetPricingRuleTypesIdRes, error)
	// GetProducts implements GetProducts operation.
	//
	// Retrieve a list of products. The products can be filtered by fields such as `id`. The products can
	// also be sorted or paginated.
	//
	// GET /admin/products
	GetProducts(ctx context.Context, req OptAdminGetProductsParams) (GetProductsRes, error)
	// GetProductsId implements GetProductsId operation.
	//
	// Retrieve a product by its ID. You can expand the product's relations or select the fields that
	// should be returned.
	//
	// GET /admin/products/{id}
	GetProductsId(ctx context.Context, req jx.Raw, params GetProductsIdParams) (GetProductsIdRes, error)
	// GetProductsIdOptions implements GetProductsIdOptions operation.
	//
	// Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS.
	// The options can also be paginated.
	//
	// GET /admin/products/{id}/options
	GetProductsIdOptions(ctx context.Context, req jx.Raw, params GetProductsIdOptionsParams) (GetProductsIdOptionsRes, error)
	// GetProductsIdOptionsOptionID implements GetProductsIdOptionsOption_id operation.
	//
	// Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS.
	// The options can also be paginated.
	//
	// GET /admin/products/{id}/options/{option_id}
	GetProductsIdOptionsOptionID(ctx context.Context, req jx.Raw, params GetProductsIdOptionsOptionIDParams) (GetProductsIdOptionsOptionIDRes, error)
	// GetProductsIdVariants implements GetProductsIdVariants operation.
	//
	// Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER
	// FIELDS. The variants can also be paginated.
	//
	// GET /admin/products/{id}/variants
	GetProductsIdVariants(ctx context.Context, req jx.Raw, params GetProductsIdVariantsParams) (GetProductsIdVariantsRes, error)
	// GetProductsIdVariantsVariantID implements GetProductsIdVariantsVariant_id operation.
	//
	// Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER
	// FIELDS. The variants can also be paginated.
	//
	// GET /admin/products/{id}/variants/{variant_id}
	GetProductsIdVariantsVariantID(ctx context.Context, req jx.Raw, params GetProductsIdVariantsVariantIDParams) (GetProductsIdVariantsVariantIDRes, error)
	// GetPromotions implements GetPromotions operation.
	//
	// Retrieve a list of promotions. The promotions can be filtered by fields such as `id`. The
	// promotions can also be sorted or paginated.
	//
	// GET /admin/promotions
	GetPromotions(ctx context.Context, req jx.Raw) (GetPromotionsRes, error)
	// GetPromotionsId implements GetPromotionsId operation.
	//
	// Retrieve a promotion by its ID. You can expand the promotion's relations or select the fields that
	// should be returned.
	//
	// GET /admin/promotions/{id}
	GetPromotionsId(ctx context.Context, req OptAdminGetPromotionsParams, params GetPromotionsIdParams) (GetPromotionsIdRes, error)
	// GetRegions implements GetRegions operation.
	//
	// Retrieve a list of regions. The regions can be filtered by fields such as `id`. The regions can
	// also be sorted or paginated.
	//
	// GET /admin/regions
	GetRegions(ctx context.Context, req jx.Raw) (GetRegionsRes, error)
	// GetRegionsId implements GetRegionsId operation.
	//
	// Retrieve a region by its ID. You can expand the region's relations or select the fields that
	// should be returned.
	//
	// GET /admin/regions/{id}
	GetRegionsId(ctx context.Context, req jx.Raw, params GetRegionsIdParams) (GetRegionsIdRes, error)
	// GetSalesChannels implements GetSalesChannels operation.
	//
	// Retrieve a list of sales channels. The sales channels can be filtered by fields such as `id`. The
	// sales channels can also be sorted or paginated.
	//
	// GET /admin/sales-channels
	GetSalesChannels(ctx context.Context, req jx.Raw) (GetSalesChannelsRes, error)
	// GetSalesChannelsId implements GetSalesChannelsId operation.
	//
	// Retrieve a sales channel by its ID. You can expand the sales channel's relations or select the
	// fields that should be returned.
	//
	// GET /admin/sales-channels/{id}
	GetSalesChannelsId(ctx context.Context, req jx.Raw, params GetSalesChannelsIdParams) (GetSalesChannelsIdRes, error)
	// GetStockLocationsId implements GetStockLocationsId operation.
	//
	// Retrieve a stock location by its ID. You can expand the stock location's relations or select the
	// fields that should be returned.
	//
	// GET /admin/stock-locations/{id}
	GetStockLocationsId(ctx context.Context, params GetStockLocationsIdParams) (GetStockLocationsIdRes, error)
	// GetStores implements GetStores operation.
	//
	// Retrieve a list of stores. The stores can be filtered by fields such as `id`. The stores can also
	// be sorted or paginated.
	//
	// GET /admin/stores
	GetStores(ctx context.Context, req jx.Raw) (GetStoresRes, error)
	// GetStoresId implements GetStoresId operation.
	//
	// Retrieve a store by its ID. You can expand the store's relations or select the fields that should
	// be returned.
	//
	// GET /admin/stores/{id}
	GetStoresId(ctx context.Context, req jx.Raw, params GetStoresIdParams) (GetStoresIdRes, error)
	// GetTaxRates implements GetTaxRates operation.
	//
	// Retrieve a list of tax rates. The tax rates can be filtered by fields such as `id`. The tax rates
	// can also be sorted or paginated.
	//
	// GET /admin/tax-rates
	GetTaxRates(ctx context.Context, req jx.Raw) (GetTaxRatesRes, error)
	// GetTaxRatesId implements GetTaxRatesId operation.
	//
	// Retrieve a tax rate by its ID. You can expand the tax rate's relations or select the fields that
	// should be returned.
	//
	// GET /admin/tax-rates/{id}
	GetTaxRatesId(ctx context.Context, req jx.Raw, params GetTaxRatesIdParams) (GetTaxRatesIdRes, error)
	// GetUsers implements GetUsers operation.
	//
	// Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be
	// sorted or paginated.
	//
	// GET /admin/users
	GetUsers(ctx context.Context, req jx.Raw) (GetUsersRes, error)
	// GetUsersId implements GetUsersId operation.
	//
	// Retrieve a user by its ID. You can expand the user's relations or select the fields that should be
	// returned.
	//
	// GET /admin/users/{id}
	GetUsersId(ctx context.Context, req jx.Raw, params GetUsersIdParams) (GetUsersIdRes, error)
	// GetUsersMe implements GetUsersMe operation.
	//
	// Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be
	// sorted or paginated.
	//
	// GET /admin/users/me
	GetUsersMe(ctx context.Context, req jx.Raw) (GetUsersMeRes, error)
	// GetWorkflowsExecutions implements GetWorkflowsExecutions operation.
	//
	// Retrieve a list of workflows executions. The workflows executions can be filtered by fields such
	// as `id`. The workflows executions can also be sorted or paginated.
	//
	// GET /admin/workflows-executions
	GetWorkflowsExecutions(ctx context.Context, req jx.Raw) (GetWorkflowsExecutionsRes, error)
	// GetWorkflowsExecutionsId implements GetWorkflowsExecutionsId operation.
	//
	// Retrieve a workflows execution by its ID. You can expand the workflows execution's relations or
	// select the fields that should be returned.
	//
	// GET /admin/workflows-executions/{id}
	GetWorkflowsExecutionsId(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsIdParams) (GetWorkflowsExecutionsIdRes, error)
	// GetWorkflowsExecutionsWorkflowIdSubscribe implements GetWorkflowsExecutionsWorkflow_idSubscribe operation.
	//
	// Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields
	// like FILTER FIELDS. The subscribes can also be paginated.
	//
	// GET /admin/workflows-executions/{workflow_id}/subscribe
	GetWorkflowsExecutionsWorkflowIdSubscribe(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsWorkflowIdSubscribeParams) (GetWorkflowsExecutionsWorkflowIdSubscribeRes, error)
	// GetWorkflowsExecutionsWorkflowIdTransactionID implements GetWorkflowsExecutionsWorkflow_idTransaction_id operation.
	//
	// Retrieve a list of  in a workflows execution. The  can be filtered by fields like FILTER FIELDS.
	// The  can also be paginated.
	//
	// GET /admin/workflows-executions/{workflow_id}/{transaction_id}
	GetWorkflowsExecutionsWorkflowIdTransactionID(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsWorkflowIdTransactionIDParams) (GetWorkflowsExecutionsWorkflowIdTransactionIDRes, error)
	// GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribe implements GetWorkflowsExecutionsWorkflow_idTransaction_idStep_idSubscribe operation.
	//
	// Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields
	// like FILTER FIELDS. The subscribes can also be paginated.
	//
	// GET /admin/workflows-executions/{workflow_id}/{transaction_id}/{step_id}/subscribe
	GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribe(ctx context.Context, req jx.Raw, params GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribeParams) (GetWorkflowsExecutionsWorkflowIdTransactionIdStepIdSubscribeRes, error)
	// PostApiKeys implements PostApiKeys operation.
	//
	// Create a api key.
	//
	// POST /admin/api-keys
	PostApiKeys(ctx context.Context, req jx.Raw) (PostApiKeysRes, error)
	// PostApiKeysId implements PostApiKeysId operation.
	//
	// Update a api key's details.
	//
	// POST /admin/api-keys/{id}
	PostApiKeysId(ctx context.Context, req jx.Raw, params PostApiKeysIdParams) (PostApiKeysIdRes, error)
	// PostApiKeysIdRevoke implements PostApiKeysIdRevoke operation.
	//
	// Add a list of revokes to a api key.
	//
	// POST /admin/api-keys/{id}/revoke
	PostApiKeysIdRevoke(ctx context.Context, req jx.Raw, params PostApiKeysIdRevokeParams) (PostApiKeysIdRevokeRes, error)
	// PostCampaigns implements PostCampaigns operation.
	//
	// Create a campaign.
	//
	// POST /admin/campaigns
	PostCampaigns(ctx context.Context, req jx.Raw) (PostCampaignsRes, error)
	// PostCampaignsId implements PostCampaignsId operation.
	//
	// Update a campaign's details.
	//
	// POST /admin/campaigns/{id}
	PostCampaignsId(ctx context.Context, req OptAdminPostCampaignsReq, params PostCampaignsIdParams) (PostCampaignsIdRes, error)
	// PostCollections implements PostCollections operation.
	//
	// Create a collection.
	//
	// POST /admin/collections
	PostCollections(ctx context.Context, req jx.Raw) (PostCollectionsRes, error)
	// PostCollectionsId implements PostCollectionsId operation.
	//
	// Update a collection's details.
	//
	// POST /admin/collections/{id}
	PostCollectionsId(ctx context.Context, req jx.Raw, params PostCollectionsIdParams) (PostCollectionsIdRes, error)
	// PostCustomerGroups implements PostCustomerGroups operation.
	//
	// Create a customer group.
	//
	// POST /admin/customer-groups
	PostCustomerGroups(ctx context.Context, req jx.Raw) (PostCustomerGroupsRes, error)
	// PostCustomerGroupsId implements PostCustomerGroupsId operation.
	//
	// Update a customer group's details.
	//
	// POST /admin/customer-groups/{id}
	PostCustomerGroupsId(ctx context.Context, req jx.Raw, params PostCustomerGroupsIdParams) (PostCustomerGroupsIdRes, error)
	// PostCustomerGroupsIdCustomersBatch implements PostCustomerGroupsIdCustomersBatch operation.
	//
	// Add a list of customers to a customer group.
	//
	// POST /admin/customer-groups/{id}/customers/batch
	PostCustomerGroupsIdCustomersBatch(ctx context.Context, req OptAdminPostCustomerGroupsGroupCustomersBatchReq, params PostCustomerGroupsIdCustomersBatchParams) (PostCustomerGroupsIdCustomersBatchRes, error)
	// PostCustomerGroupsIdCustomersRemove implements PostCustomerGroupsIdCustomersRemove operation.
	//
	// Add a list of removes to a customer group.
	//
	// POST /admin/customer-groups/{id}/customers/remove
	PostCustomerGroupsIdCustomersRemove(ctx context.Context, req OptAdminPostCustomerGroupsGroupCustomersBatchReq, params PostCustomerGroupsIdCustomersRemoveParams) (PostCustomerGroupsIdCustomersRemoveRes, error)
	// PostCustomers implements PostCustomers operation.
	//
	// Create a customer.
	//
	// POST /admin/customers
	PostCustomers(ctx context.Context, req jx.Raw) (PostCustomersRes, error)
	// PostCustomersId implements PostCustomersId operation.
	//
	// Update a customer's details.
	//
	// POST /admin/customers/{id}
	PostCustomersId(ctx context.Context, req jx.Raw, params PostCustomersIdParams) (PostCustomersIdRes, error)
	// PostCustomersIdAddresses implements PostCustomersIdAddresses operation.
	//
	// Add a list of addresses to a customer.
	//
	// POST /admin/customers/{id}/addresses
	PostCustomersIdAddresses(ctx context.Context, req jx.Raw, params PostCustomersIdAddressesParams) (PostCustomersIdAddressesRes, error)
	// PostCustomersIdAddressesAddressID implements PostCustomersIdAddressesAddress_id operation.
	//
	// Add a list of addresses to a customer.
	//
	// POST /admin/customers/{id}/addresses/{address_id}
	PostCustomersIdAddressesAddressID(ctx context.Context, req jx.Raw, params PostCustomersIdAddressesAddressIDParams) (PostCustomersIdAddressesAddressIDRes, error)
	// PostFulfillmentShippingOptionsIdRulesBatchAdd implements PostFulfillmentShippingOptionsIdRulesBatchAdd operation.
	//
	// Add a list of adds to a fulfillment.
	//
	// POST /admin/fulfillment/shipping-options/{id}/rules/batch/add
	PostFulfillmentShippingOptionsIdRulesBatchAdd(ctx context.Context, req OptAdminPostFulfillmentShippingOptionsRulesBatchAddReq, params PostFulfillmentShippingOptionsIdRulesBatchAddParams) (PostFulfillmentShippingOptionsIdRulesBatchAddRes, error)
	// PostFulfillmentShippingOptionsIdRulesBatchRemove implements PostFulfillmentShippingOptionsIdRulesBatchRemove operation.
	//
	// Add a list of removes to a fulfillment.
	//
	// POST /admin/fulfillment/shipping-options/{id}/rules/batch/remove
	PostFulfillmentShippingOptionsIdRulesBatchRemove(ctx context.Context, req OptAdminPostFulfillmentShippingOptionsRulesBatchRemoveReq, params PostFulfillmentShippingOptionsIdRulesBatchRemoveParams) (PostFulfillmentShippingOptionsIdRulesBatchRemoveRes, error)
	// PostInventoryItems implements PostInventoryItems operation.
	//
	// Create a inventory item.
	//
	// POST /admin/inventory-items
	PostInventoryItems(ctx context.Context, req OptAdminPostInventoryItemsReq) (PostInventoryItemsRes, error)
	// PostInventoryItemsId implements PostInventoryItemsId operation.
	//
	// Update a inventory item's details.
	//
	// POST /admin/inventory-items/{id}
	PostInventoryItemsId(ctx context.Context, req OptAdminPostInventoryItemsInventoryItemReq, params PostInventoryItemsIdParams) (PostInventoryItemsIdRes, error)
	// PostInventoryItemsIdLocationLevels implements PostInventoryItemsIdLocationLevels operation.
	//
	// Add a list of location levels to a inventory item.
	//
	// POST /admin/inventory-items/{id}/location-levels
	PostInventoryItemsIdLocationLevels(ctx context.Context, req OptAdminPostInventoryItemsItemLocationLevelsReq, params PostInventoryItemsIdLocationLevelsParams) (PostInventoryItemsIdLocationLevelsRes, error)
	// PostInventoryItemsIdLocationLevelsLocationID implements PostInventoryItemsIdLocationLevelsLocation_id operation.
	//
	// Add a list of location levels to a inventory item.
	//
	// POST /admin/inventory-items/{id}/location-levels/{location_id}
	PostInventoryItemsIdLocationLevelsLocationID(ctx context.Context, req OptAdminPostInventoryItemsItemLocationLevelsLevelReq, params PostInventoryItemsIdLocationLevelsLocationIDParams) (PostInventoryItemsIdLocationLevelsLocationIDRes, error)
	// PostInvites implements PostInvites operation.
	//
	// Create a invite.
	//
	// POST /admin/invites
	PostInvites(ctx context.Context, req jx.Raw) (PostInvitesRes, error)
	// PostInvitesAccept implements PostInvitesAccept operation.
	//
	// Create a invite.
	//
	// POST /admin/invites/accept
	PostInvitesAccept(ctx context.Context, req OptAdminPostInvitesInviteAcceptReq) (PostInvitesAcceptRes, error)
	// PostInvitesIdResend implements PostInvitesIdResend operation.
	//
	// Add a list of resends to a invite.
	//
	// POST /admin/invites/{id}/resend
	PostInvitesIdResend(ctx context.Context, req jx.Raw, params PostInvitesIdResendParams) (PostInvitesIdResendRes, error)
	// PostPaymentsIdCapture implements PostPaymentsIdCapture operation.
	//
	// Add a list of captures to a payment.
	//
	// POST /admin/payments/{id}/capture
	PostPaymentsIdCapture(ctx context.Context, req OptAdminPostPaymentsCapturesReq, params PostPaymentsIdCaptureParams) (PostPaymentsIdCaptureRes, error)
	// PostPaymentsIdRefund implements PostPaymentsIdRefund operation.
	//
	// Add a list of refunds to a payment.
	//
	// POST /admin/payments/{id}/refund
	PostPaymentsIdRefund(ctx context.Context, req OptAdminPostPaymentsRefundsReq, params PostPaymentsIdRefundParams) (PostPaymentsIdRefundRes, error)
	// PostPriceLists implements PostPriceLists operation.
	//
	// Create a price list.
	//
	// POST /admin/price-lists
	PostPriceLists(ctx context.Context, req OptAdminPostPriceListsReq) (PostPriceListsRes, error)
	// PostPriceListsId implements PostPriceListsId operation.
	//
	// Update a price list's details.
	//
	// POST /admin/price-lists/{id}
	PostPriceListsId(ctx context.Context, req OptAdminPostPriceListsPriceListReq, params PostPriceListsIdParams) (PostPriceListsIdRes, error)
	// PostPriceListsIdPricesBatchAdd implements PostPriceListsIdPricesBatchAdd operation.
	//
	// Add a list of adds to a price list.
	//
	// POST /admin/price-lists/{id}/prices/batch/add
	PostPriceListsIdPricesBatchAdd(ctx context.Context, req OptAdminPostPriceListsPriceListPricesBatchAddReq, params PostPriceListsIdPricesBatchAddParams) (PostPriceListsIdPricesBatchAddRes, error)
	// PostPriceListsIdPricesBatchRemove implements PostPriceListsIdPricesBatchRemove operation.
	//
	// Add a list of removes to a price list.
	//
	// POST /admin/price-lists/{id}/prices/batch/remove
	PostPriceListsIdPricesBatchRemove(ctx context.Context, req OptAdminPostPriceListsPriceListPricesBatchRemoveReq, params PostPriceListsIdPricesBatchRemoveParams) (PostPriceListsIdPricesBatchRemoveRes, error)
	// PostPricingRuleTypes implements PostPricingRuleTypes operation.
	//
	// Create a pricing.
	//
	// POST /admin/pricing/rule-types
	PostPricingRuleTypes(ctx context.Context, req OptAdminPostPricingRuleTypesReq) (PostPricingRuleTypesRes, error)
	// PostPricingRuleTypesId implements PostPricingRuleTypesId operation.
	//
	// Add a list of rule types to a pricing.
	//
	// POST /admin/pricing/rule-types/{id}
	PostPricingRuleTypesId(ctx context.Context, req OptAdminPostPricingRuleTypesRuleTypeReq, params PostPricingRuleTypesIdParams) (PostPricingRuleTypesIdRes, error)
	// PostProducts implements PostProducts operation.
	//
	// Create a product.
	//
	// POST /admin/products
	PostProducts(ctx context.Context, req jx.Raw) (PostProductsRes, error)
	// PostProductsId implements PostProductsId operation.
	//
	// Update a product's details.
	//
	// POST /admin/products/{id}
	PostProductsId(ctx context.Context, req jx.Raw, params PostProductsIdParams) (PostProductsIdRes, error)
	// PostProductsIdOptions implements PostProductsIdOptions operation.
	//
	// Add a list of options to a product.
	//
	// POST /admin/products/{id}/options
	PostProductsIdOptions(ctx context.Context, req jx.Raw, params PostProductsIdOptionsParams) (PostProductsIdOptionsRes, error)
	// PostProductsIdOptionsOptionID implements PostProductsIdOptionsOption_id operation.
	//
	// Add a list of options to a product.
	//
	// POST /admin/products/{id}/options/{option_id}
	PostProductsIdOptionsOptionID(ctx context.Context, req jx.Raw, params PostProductsIdOptionsOptionIDParams) (PostProductsIdOptionsOptionIDRes, error)
	// PostProductsIdVariants implements PostProductsIdVariants operation.
	//
	// Add a list of variants to a product.
	//
	// POST /admin/products/{id}/variants
	PostProductsIdVariants(ctx context.Context, req jx.Raw, params PostProductsIdVariantsParams) (PostProductsIdVariantsRes, error)
	// PostProductsIdVariantsVariantID implements PostProductsIdVariantsVariant_id operation.
	//
	// Add a list of variants to a product.
	//
	// POST /admin/products/{id}/variants/{variant_id}
	PostProductsIdVariantsVariantID(ctx context.Context, req jx.Raw, params PostProductsIdVariantsVariantIDParams) (PostProductsIdVariantsVariantIDRes, error)
	// PostPromotions implements PostPromotions operation.
	//
	// Create a promotion.
	//
	// POST /admin/promotions
	PostPromotions(ctx context.Context, req jx.Raw) (PostPromotionsRes, error)
	// PostPromotionsId implements PostPromotionsId operation.
	//
	// Update a promotion's details.
	//
	// POST /admin/promotions/{id}
	PostPromotionsId(ctx context.Context, req OptAdminPostPromotionsPromotionReq, params PostPromotionsIdParams) (PostPromotionsIdRes, error)
	// PostPromotionsIdBuyRulesBatchAdd implements PostPromotionsIdBuyRulesBatchAdd operation.
	//
	// Add a list of adds to a promotion.
	//
	// POST /admin/promotions/{id}/buy-rules/batch/add
	PostPromotionsIdBuyRulesBatchAdd(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchAddReq, params PostPromotionsIdBuyRulesBatchAddParams) (PostPromotionsIdBuyRulesBatchAddRes, error)
	// PostPromotionsIdBuyRulesBatchRemove implements PostPromotionsIdBuyRulesBatchRemove operation.
	//
	// Add a list of removes to a promotion.
	//
	// POST /admin/promotions/{id}/buy-rules/batch/remove
	PostPromotionsIdBuyRulesBatchRemove(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchRemoveReq, params PostPromotionsIdBuyRulesBatchRemoveParams) (PostPromotionsIdBuyRulesBatchRemoveRes, error)
	// PostPromotionsIdRulesBatchAdd implements PostPromotionsIdRulesBatchAdd operation.
	//
	// Add a list of adds to a promotion.
	//
	// POST /admin/promotions/{id}/rules/batch/add
	PostPromotionsIdRulesBatchAdd(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchAddReq, params PostPromotionsIdRulesBatchAddParams) (PostPromotionsIdRulesBatchAddRes, error)
	// PostPromotionsIdRulesBatchRemove implements PostPromotionsIdRulesBatchRemove operation.
	//
	// Add a list of removes to a promotion.
	//
	// POST /admin/promotions/{id}/rules/batch/remove
	PostPromotionsIdRulesBatchRemove(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchRemoveReq, params PostPromotionsIdRulesBatchRemoveParams) (PostPromotionsIdRulesBatchRemoveRes, error)
	// PostPromotionsIdRulesBatchUpdate implements PostPromotionsIdRulesBatchUpdate operation.
	//
	// Add a list of updates to a promotion.
	//
	// POST /admin/promotions/{id}/rules/batch/update
	PostPromotionsIdRulesBatchUpdate(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchUpdateReq, params PostPromotionsIdRulesBatchUpdateParams) (PostPromotionsIdRulesBatchUpdateRes, error)
	// PostPromotionsIdTargetRulesBatchAdd implements PostPromotionsIdTargetRulesBatchAdd operation.
	//
	// Add a list of adds to a promotion.
	//
	// POST /admin/promotions/{id}/target-rules/batch/add
	PostPromotionsIdTargetRulesBatchAdd(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchAddReq, params PostPromotionsIdTargetRulesBatchAddParams) (PostPromotionsIdTargetRulesBatchAddRes, error)
	// PostPromotionsIdTargetRulesBatchRemove implements PostPromotionsIdTargetRulesBatchRemove operation.
	//
	// Add a list of removes to a promotion.
	//
	// POST /admin/promotions/{id}/target-rules/batch/remove
	PostPromotionsIdTargetRulesBatchRemove(ctx context.Context, req OptAdminPostPromotionsPromotionRulesBatchRemoveReq, params PostPromotionsIdTargetRulesBatchRemoveParams) (PostPromotionsIdTargetRulesBatchRemoveRes, error)
	// PostRegions implements PostRegions operation.
	//
	// Create a region.
	//
	// POST /admin/regions
	PostRegions(ctx context.Context, req jx.Raw) (PostRegionsRes, error)
	// PostRegionsId implements PostRegionsId operation.
	//
	// Update a region's details.
	//
	// POST /admin/regions/{id}
	PostRegionsId(ctx context.Context, req jx.Raw, params PostRegionsIdParams) (PostRegionsIdRes, error)
	// PostSalesChannels implements PostSalesChannels operation.
	//
	// Create a sales channel.
	//
	// POST /admin/sales-channels
	PostSalesChannels(ctx context.Context, req jx.Raw) (PostSalesChannelsRes, error)
	// PostSalesChannelsId implements PostSalesChannelsId operation.
	//
	// Update a sales channel's details.
	//
	// POST /admin/sales-channels/{id}
	PostSalesChannelsId(ctx context.Context, req jx.Raw, params PostSalesChannelsIdParams) (PostSalesChannelsIdRes, error)
	// PostSalesChannelsIdProductsBatchAdd implements PostSalesChannelsIdProductsBatchAdd operation.
	//
	// Add a list of adds to a sales channel.
	//
	// POST /admin/sales-channels/{id}/products/batch/add
	PostSalesChannelsIdProductsBatchAdd(ctx context.Context, req jx.Raw, params PostSalesChannelsIdProductsBatchAddParams) (PostSalesChannelsIdProductsBatchAddRes, error)
	// PostStockLocations implements PostStockLocations operation.
	//
	// Create a stock location.
	//
	// POST /admin/stock-locations
	PostStockLocations(ctx context.Context, req OptAdminPostStockLocationsReq) (PostStockLocationsRes, error)
	// PostStoresId implements PostStoresId operation.
	//
	// Update a store's details.
	//
	// POST /admin/stores/{id}
	PostStoresId(ctx context.Context, req jx.Raw, params PostStoresIdParams) (PostStoresIdRes, error)
	// PostTaxRates implements PostTaxRates operation.
	//
	// Create a tax rate.
	//
	// POST /admin/tax-rates
	PostTaxRates(ctx context.Context, req OptAdminPostTaxRatesReq) (PostTaxRatesRes, error)
	// PostTaxRatesId implements PostTaxRatesId operation.
	//
	// Update a tax rate's details.
	//
	// POST /admin/tax-rates/{id}
	PostTaxRatesId(ctx context.Context, req OptAdminPostTaxRatesTaxRateReq, params PostTaxRatesIdParams) (PostTaxRatesIdRes, error)
	// PostTaxRatesIdRules implements PostTaxRatesIdRules operation.
	//
	// Add a list of rules to a tax rate.
	//
	// POST /admin/tax-rates/{id}/rules
	PostTaxRatesIdRules(ctx context.Context, req OptAdminPostTaxRatesTaxRateRulesReq, params PostTaxRatesIdRulesParams) (PostTaxRatesIdRulesRes, error)
	// PostTaxRegions implements PostTaxRegions operation.
	//
	// Create a tax region.
	//
	// POST /admin/tax-regions
	PostTaxRegions(ctx context.Context, req OptAdminPostTaxRegionsReq) (PostTaxRegionsRes, error)
	// PostUsers implements PostUsers operation.
	//
	// Create a user.
	//
	// POST /admin/users
	PostUsers(ctx context.Context, req jx.Raw) (PostUsersRes, error)
	// PostUsersId implements PostUsersId operation.
	//
	// Update a user's details.
	//
	// POST /admin/users/{id}
	PostUsersId(ctx context.Context, req OptAdminUpdateUserRequest, params PostUsersIdParams) (PostUsersIdRes, error)
	// PostWorkflowsExecutionsWorkflowIdRun implements PostWorkflowsExecutionsWorkflow_idRun operation.
	//
	// Add a list of runs to a workflows execution.
	//
	// POST /admin/workflows-executions/{workflow_id}/run
	PostWorkflowsExecutionsWorkflowIdRun(ctx context.Context, req OptAdminPostWorkflowsRunReq, params PostWorkflowsExecutionsWorkflowIdRunParams) (PostWorkflowsExecutionsWorkflowIdRunRes, error)
	// PostWorkflowsExecutionsWorkflowIdStepsFailure implements PostWorkflowsExecutionsWorkflow_idStepsFailure operation.
	//
	// Add a list of failures to a workflows execution.
	//
	// POST /admin/workflows-executions/{workflow_id}/steps/failure
	PostWorkflowsExecutionsWorkflowIdStepsFailure(ctx context.Context, req OptAdminPostWorkflowsAsyncResponseReq, params PostWorkflowsExecutionsWorkflowIdStepsFailureParams) (PostWorkflowsExecutionsWorkflowIdStepsFailureRes, error)
	// PostWorkflowsExecutionsWorkflowIdStepsSuccess implements PostWorkflowsExecutionsWorkflow_idStepsSuccess operation.
	//
	// Add a list of successes to a workflows execution.
	//
	// POST /admin/workflows-executions/{workflow_id}/steps/success
	PostWorkflowsExecutionsWorkflowIdStepsSuccess(ctx context.Context, req OptAdminPostWorkflowsAsyncResponseReq, params PostWorkflowsExecutionsWorkflowIdStepsSuccessParams) (PostWorkflowsExecutionsWorkflowIdStepsSuccessRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
